= form_for @user, url: @user.new_record? ? admin_users_path : admin_user_path(@user), :html => { :class => "form-horizontal js-loader-cto loader-cto-edit-module" } do |f|
  - if @user.errors.any?
    #error_explanation
      h2 = "#{pluralize(@user.errors.count, "error")} prohibited this user from being saved:"
      ul
        - @user.errors.full_messages.each do |message|
          li = message
  .control-group
    = f.label :name, :class => 'control-label'
    .controls
      = f.text_field :name, :class => 'text_field'
  .control-group
    = f.label :email, :class => 'control-label'
    .controls
      = f.text_field :email, :class => 'text_field'
  .control-group
    = f.label :phone, :class => 'control-label'
    .controls
      = f.text_field :phone, :class => 'text_field'
  .control-group
    = f.label :password, :class => 'control-label'
    .controls
      = f.text_field :password, :class => 'text_field'
  - unless @user.try(:id).blank?
    .control-group
      .controls
        | * оставить пустым, если смена пароля не нужна
  .control-group
    = f.label :type, :class => 'control-label'
    .controls
      = f.select :type, [["Автовладелец", "CarOwner"], ["Автомеханик", "Mechanic"]], {}, :class => 'select_field'
  .control-group
    = f.label :about_me, :class => 'control-label'
    .controls
      = f.text_area :about_me, :class => 'text_field'
  .control-group
    = f.label :cto_id, :class => 'control-label'
    .controls
      = f.select :cto_id, Cto.order(:name).map{|c| [c.name, c.id]}, {include_blank: true}, :class => 'select_field js-city'
  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    '
    = link_to t('.cancel', :default => t("helpers.links.cancel")), admin_users_path, :class => 'btn'
