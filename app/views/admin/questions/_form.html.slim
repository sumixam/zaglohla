= form_for @question, url: @question.new_record? ? admin_questions_path : admin_question_path(@question), :html => { :class => "form-horizontal js-question-form" } do |f|
  .control-group
    = f.label :topic, :class => 'control-label'
    .controls
      = f.text_field :topic, :class => 'text_field'
  .control-group
    = f.label :tag_list, :class => 'control-label'
    .controls
      = f.text_field :tag_list, :class => 'text_field'
  .control-group
    = f.label :created_at, :class => 'control-label'
    .controls
      = f.text_field :created_at, :class => 'text_field', placeholder: "ГГГГ-ММ-ДД ЧЧ:ММ:СС"
  .control-group
    = f.label :body, :class => 'control-label'
    .controls
      = f.text_area :body
  .control-group
    label.control-label
      | New User
    .controls
      input type="checkbox" class="js-new-user" name="new_user" value="1"
  .control-group.js-user-id
    = f.label :user_id, :class => 'control-label'
    .controls
      = f.select :user_id, User.order(:name).map{ |p| [p.name, p.id] }, :class => 'text_field'
  .control-group.js-user-new
    = f.label :user_name, :class => 'control-label'
    .controls
      input type="text" name="user[name]"
  .control-group.js-user-new
    = f.label :user_email, :class => 'control-label'
    .controls
      input type="text" name="user[email]"
  .control-group
    = f.label :year_of_production, :class => 'control-label'
    .controls
      = f.select :year_of_production, (1900..Date.today.year).to_a.reverse, {include_blank: true}, :class => 'text_field'
  .control-group
    = f.label :car_brand_id, :class => 'control-label'
    .controls
      = f.select :car_brand_id, CategoryAuto.find(1).car_brands.order(:name).map{ |p| [p.name, p.id] }, {include_blank: true}, :class => 'text_field js-car-brand'
  .control-group
    = f.label :car_model_id, :class => 'control-label'
    .controls
      - if @question.car_brand_id.present?
        = f.select :car_model_id, CarModel.where(car_brand_id: @question.car_brand_id).order(:name).map{ |p| [p.name, p.id] }, {include_blank: true}, :class => 'text_field js-car-model'
      - else
        = f.select :car_model_id, [], {}, :class => 'text_field js-car-model'
  .control-group
    = f.label :car_generation_id, :class => 'control-label'
    .controls
      - if @question.car_model_id.present?
        = f.select :car_generation_id, CarGeneration.where(car_model_id: @question.car_model_id).order(:name).map{ |p| [p.name, p.id] }, {include_blank: true}, :class => 'text_field js-car-generation'
      - else
        = f.select :car_generation_id, [], {}, :class => 'text_field js-car-generation'
  .control-group
    = f.label :car_engine_id, :class => 'control-label'
    .controls
      - if @question.car_generation_id.present?
        = f.select :car_engine_id, CarEngine.where(car_generation_id: @question.car_generation_id).order(:name).map{ |p| [p.name, p.id] }, {include_blank: true}, :class => 'text_field js-car-engine'
      - else
        = f.select :car_engine_id, [], {}, :class => 'text_field js-car-engine'
  .control-group
    = f.label :alternative_name, :class => 'control-label'
    .controls
      = f.text_field :alternative_name, :class => 'text_field'
  .control-group
    = f.label :visible, :class => 'control-label'
    .controls
      = f.check_box :visible, :class => 'text_field'
  .form-actions
    = f.submit nil, :class => 'btn btn-primary'
    = link_to t('.cancel', :default => t("helpers.links.cancel")), admin_pages_path, :class => 'btn'
    = link_to 'Новый ответ', new_admin_answer_path(question_id: @question.id), :class => 'btn'


coffee:
  new App.AdminQuestion(el: '.js-question-form')
